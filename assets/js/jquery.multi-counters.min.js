/* ========= INFORMATION ============================
	- document:  Multi Counters
	- author:    Wow-Company @ Codecanyon
	- profile:   https://codecanyon.net/user/wow-company
	- version:   1.0
	- email:     wow@wow-company.com
==================================================== */
(function (a) { "use strict"; a.fn.MultiCounter = function (b) { var c = a.extend({ mcType: ['Timer'], mcDate: [2020,11,31], mcTimer: [1,1,1], mcAmount: ['up',150,399], mcSpeed: ['random',1,10], mcIncrement: ['random',3,15], mcPadding: '30px 50px', mcBackground: 'black', mcColor: 'white', mcSize: '30px', mcTextSize: '30px', mcTextColor: 'red', mcBorder: ['3px', 'solid', 'orange'], }, b); return this.each(function () { var self = this, cookieIsSet  = document.cookie.indexOf(c.cookieName) >= 0, cookieSet = c.setCookie, cookieDays = c.cookieDays, cookieName = c.cookieName, mcTarget = c.mcTarget, targets = c.mcTargets; A(); function A(){ var content = a(self).html(); var content = content.replace("{day}", '<span class="mday multi-counter"></span>'); var content = content.replace("{hour}", '<span class="mhour multi-counter"></span>'); var content = content.replace("{min}", '<span class="mmin multi-counter"></span>'); var content = content.replace("{sec}", '<span class="msec multi-counter"></span>'); var content = content.replace("{counter}", '<span class="mcount multi-counter"></span>'); a(self).html(content); } B(); function B(){ a(self).css({"padding" : c.mcPadding, "background" :  c.mcBackground, "color" :  c.mcTextColor, "font-size" :  c.mcTextSize, 'border-width' : c.mcBorder[0], 'border-style' : c.mcBorder[1], 'border-color' : c.mcBorder[2]}); a(self).find('.multi-counter').css({"color" :  c.mcColor, "font-size" :  c.mcSize}); } if(c.mcType == 'Date'){ var task = new Date(c.mcDate[0], c.mcDate[1], c.mcDate[2]); C(); } if(c.mcType == 'Timer'){ if(cookieIsSet && cookieSet == true){ var task = G ( cookieName ); } else { var task = (new Date()).getTime() + c.mcTimer[0]*86400000+c.mcTimer[1]*3600000+c.mcTimer[2]*60000; if (cookieSet){ F ( cookieName, task, cookieDays); } } C(); } if(c.mcType == 'Counter'){ if(cookieIsSet && cookieSet == true){ var mcounter = G ( cookieName ); } else { var mcounter = c.mcAmount[1]; } D(); } function D(){ var speed = c.mcSpeed[0] == 'stable' ? c.mcSpeed[1] : Math.floor(Math.random() * (c.mcSpeed[2] - c.mcSpeed[1])) + c.mcSpeed[1]; var amount = c.mcIncrement[0] == 'stable' ? c.mcIncrement[1] : Math.floor(Math.random() * (c.mcIncrement[2] - c.mcIncrement[1])) + c.mcIncrement[1]; if(c.mcAmount[0] == 'down'){ mcounter = mcounter*1-amount*1; if(mcounter <= c.mcAmount[2]){ a(self).find('.mcount').html(c.mcAmount[2]); if(mcTarget){ J(); } return; } } else { mcounter = mcounter*1+amount*1; if(mcounter >= c.mcAmount[2]){ a(self).find('.mcount').html(c.mcAmount[2]); if(mcTarget){ J(); } return; } } a(self).find('.mcount').html(mcounter); if (cookieSet == true){ F ( cookieName, mcounter, cookieDays); } setTimeout(D, speed*1000); } function C(){ var left = Math.floor((task - (new Date())) / 1000); if (left < 0) { left = 0; if(mcTarget){ J(); } return } var day = Math.floor(left / 86400); if (day < 10) { var eday = '0' + day } else { var eday = day } left -= day * 86400; var hour = Math.floor(left / 3600); if (hour < 10) { var ehour = '0' + hour } else { var ehour = hour } left -= hour * 3600; var minut = Math.floor(left / 60); if (minut < 10) { var emin = '0' + minut } else { var emin = minut } left -= minut * 60; var second = left; if (second < 10) { var esec = '0' + second } else { var esec = second } a(self).find('.msec').html(esec); a(self).find('.mmin').html(emin); a(self).find('.mhour').html(ehour); a(self).find('.mday').html(eday); setTimeout(C, 1000); } function F ( name, value, exp_d) { var cookie_string = name + "=" + escape ( value ); if ( exp_d ) { var expires = new Date(); expires.setMilliseconds(expires.getMilliseconds() + exp_d * 864e+5); cookie_string += "; expires=" + expires.toGMTString(); } document.cookie = cookie_string; } function G ( cookie_name ) { var results = document.cookie.match ( '(^|;) ?' + cookie_name + '=([^;]*)(;|a)' ); if ( results ) return ( unescape ( results[2] ) ); else return null; } function J (){ var numbers = targets.length; for (var i = 0; i < numbers; i++) { if(targets[i][0] == 'redirect'){ window.location.replace(targets[i][1]); } if(targets[i][0] == 'hideblock'){ a(targets[i][1]).hide(); } if(targets[i][0] == 'showblock'){ a(targets[i][1]).show(); } if(targets[i][0] == 'message'){ a(self).html(targets[i][1]); } } } }); } }(jQuery));